/*!
  \page WDOG WDOG (Init_WDOG)
**          This file implements the WDOG (WDOG) module initialization
**          according to the Peripheral Initialization settings, and
**          defines interrupt service routines prototypes.
**

- \subpage WDOG_settings
- \subpage WDOG_regs_overview  
- \subpage WDOG_regs_details
- \ref WDOG_module "Component documentation" 
\page WDOG_regs_overview Registers Initialization Overview
This page contains the initialization values for the registers of the peripheral(s) configured
by the component. 
<table>
<tr><td colspan="4" class="ttitle1">WDOG Initialization</td></tr>
<tr><td class="ttitle2">Address</td><td class="ttitle2">Register</td><td class="ttitle2">Register Value</td><td class="ttitle2">Register Description</td></tr>
<tr><td>0x4005200E</td><td>WDOG_UNLOCK</td>
<td class="regNotResetVal">0x0000DD28</td>
 <td>WDOG_UNLOCK register, peripheral WDOG.</td></tr>
<tr><td>0x40052002</td><td>WDOG_STCTRLL</td>
<td class="regNotResetVal">0x00008001</td>
 <td>WDOG_STCTRLL register, peripheral WDOG.</td></tr>
<tr><td>0x4005200A</td><td>WDOG_WINL</td>
<td class="regResetVal">0x00000010</td>
 <td>WDOG_WINL register, peripheral WDOG.</td></tr>
<tr><td>0x40052008</td><td>WDOG_WINH</td>
<td class="regResetVal">0x00000000</td>
 <td>WDOG_WINH register, peripheral WDOG.</td></tr>
<tr><td>0x40052006</td><td>WDOG_TOVALL</td>
<td class="regNotResetVal">0x00008700</td>
 <td>WDOG_TOVALL register, peripheral WDOG.</td></tr>
<tr><td>0x40052004</td><td>WDOG_TOVALH</td>
<td class="regNotResetVal">0x00000393</td>
 <td>WDOG_TOVALH register, peripheral WDOG.</td></tr>
<tr><td>0x40052016</td><td>WDOG_PRESC</td>
<td class="regNotResetVal">0x00000700</td>
 <td>WDOG_PRESC register, peripheral WDOG.</td></tr>
<tr><td>0x40052000</td><td>WDOG_STCTRLH</td>
<td class="regNotResetVal">0x000000D1</td>
 <td>WDOG_STCTRLH register, peripheral WDOG.</td></tr>
</table>
Color Denotes Reset Value
<br/>
\page WDOG_regs_details Register Initialization Details
This page contains detailed description of initialization values for the 
registers of the peripheral(s) configured by the component. 

<div class="reghdr1">WDOG_UNLOCK</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="16" rowspan="2">WDOGUNLOCK</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td>
<td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x4005200E</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x0000DD28</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x0000D928</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>0 - 15</td><td>WDOGUNLOCK</td><td>0x8000</td><td>Writing the unlock sequence values to this register to makes the watchdog write-once registers writable again. The required unlock sequence is 0xC520 followed by 0xD928 within 20 bus clock cycles. A valid unlock sequence opens a window equal in length to the WCT within which you can update the registers. Writing a value other than the above mentioned sequence or if the sequence is longer than 20 bus cycles, resets the system or if IRQRSTEN is set, it interrupts and then resets the system. The unlock sequence is effective only if ALLOWUPDATE is set</td>
</tr></table>
<div class="reghdr1">WDOG_STCTRLL</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="1" rowspan="2">INTFLG</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td>
<td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052002</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00008001</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x00000001</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>15</td><td>INTFLG</td><td>0x01</td><td>Interrupt flag. It is set when an exception occurs. IRQRSTEN = 1 is a precondition to set this flag. INTFLG = 1 results in an interrupt being issued followed by a reset, WCT later. The interrupt can be cleared by writing 1 to this bit. It also gets cleared on a system reset</td>
</tr></table>
<div class="reghdr1">WDOG_WINL</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="16" rowspan="2">WINLOW</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td>
<td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x4005200A</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00000010</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x00000010</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>0 - 15</td><td>WINLOW</td><td>0x00</td><td>Defines the lower 16 bits of the 32-bit window for the windowed mode of operation of the watchdog. It is defined in terms of cycles of the pre-scaled watchdog clock. In this mode, the watchdog can be refreshed only when the timer reaches a value greater than or equal to this window length value. A refresh outside of this window resets the system or if IRQRSTEN is set, it interrupts and then resets the system</td>
</tr></table>
<div class="reghdr1">WDOG_WINH</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="16" rowspan="2">WINHIGH</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td>
<td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052008</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00000000</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x00000000</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>0 - 15</td><td>WINHIGH</td><td>0x00</td><td>Defines the upper 16 bits of the 32-bit window for the windowed mode of operation of the watchdog. It is defined in terms of cycles of the watchdog clock. In this mode, the watchdog can be refreshed only when the timer has reached a value greater than or equal to this window length. A refresh outside this window resets the system or if IRQRSTEN is set, it interrupts and then resets the system</td>
</tr></table>
<div class="reghdr1">WDOG_TOVALL</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="16" rowspan="2">TOVALLOW</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td>
<td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052006</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00008700</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x00004B4C</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>0 - 15</td><td>TOVALLOW</td><td>0x8000</td><td>Defines the lower 16 bits of the 32-bit time-out value for the watchdog timer. It is defined in terms of cycles of the watchdog clock</td>
</tr></table>
<div class="reghdr1">WDOG_TOVALH</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="16" rowspan="2">TOVALHIGH</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td>
<td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052004</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00000393</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x0000004C</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>0 - 15</td><td>TOVALHIGH</td><td>0x00</td><td>Defines the upper 16 bits of the 32-bit time-out value for the watchdog timer. It is defined in terms of cycles of the watchdog clock</td>
</tr></table>
<div class="reghdr1">WDOG_PRESC</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="3" rowspan="2">PRESCVAL</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td>
<td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052016</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x00000700</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x00000400</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>8 - 10</td><td>PRESCVAL</td><td>0x04</td><td>3-bit prescaler for the watchdog clock source. A value of zero indicates no division of the input WDOG clock. The watchdog clock is divided by (PRESCVAL + 1) to provide the prescaled WDOG_CLK</td>
</tr></table>
<div class="reghdr1">WDOG_STCTRLH</div>
<div class="regdiag">
<table class="regtbl">
<tr class="trd1r">
<td class="trd1c">Bit</td><td>15</td><td>14</td><td>13</td><td>12</td><td>11</td><td>10</td><td>9</td><td>8</td><td>7</td>
<td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td>
</tr>
<tr>
<td class="trd1c">R</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">DISTESTWDOG</td>
<td colspan="2" rowspan="2">BYTESEL</td><td colspan="1" rowspan="2">TESTSEL</td><td colspan="1" rowspan="2">TESTWDOG</td>
<td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">-</td><td colspan="1" rowspan="2">WAITEN</td>
<td colspan="1" rowspan="2">STOPEN</td><td colspan="1" rowspan="2">DBGEN</td><td colspan="1" rowspan="2">ALLOWUPDATE</td>
<td colspan="1" rowspan="2">WINEN</td><td colspan="1" rowspan="2">IRQRSTEN</td><td colspan="1" rowspan="2">CLKSRC</td>
<td colspan="1" rowspan="2">WDOGEN</td>
</tr>
<tr>
<td class="trd1c">W</td>
</tr>
<tr class="trd1r">
<td class="trd1c">Reset</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td>
<td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td>
</tr>
</table>
        
</div>
<table class="regtbl2"><tr><td class="trowtit" colspan="2">Address</td><td colspan="2">0x40052000</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">Initial value</td><td colspan="2">0x000000D1</td></tr>
<tr class="trowtit"><td  class="trowtit" colspan="2">After-reset value</td><td colspan="2">0x000001D3</td></tr>
<tr><td class="ttitle2">Bit</td><td class="ttitle2">Field</td><td class="ttitle2">Value</td><td class="ttitle2">Description</td></tr>
<tr><td>14</td><td>DISTESTWDOG</td><td>0x00</td><td>Allows the WDOG&apos;s functional test mode to be disabled permanently. After it is set, it can only be cleared by a reset. It cannot be unlocked for editing after it is set</td>
<tr><td>12 - 13</td><td>BYTESEL</td><td>0x00</td><td>This 2-bit field selects the byte to be tested when the watchdog is in the byte test mode</td>
<tr><td>11</td><td>TESTSEL</td><td>0x00</td><td>Effective only if TESTWDOG is set. Selects the test to be run on the watchdog timer</td>
<tr><td>10</td><td>TESTWDOG</td><td>0x00</td><td>Puts the watchdog in the functional test mode. In this mode, the watchdog timer and the associated compare and reset generation logic is tested for correct operation. The clock for the timer is switched from the main watchdog clock to the fast clock input for watchdog functional test. The TESTSEL bit selects the test to be run</td>
<tr><td>7</td><td>WAITEN</td><td>0x01</td><td>Enables or disables WDOG in Wait mode</td>
<tr><td>6</td><td>STOPEN</td><td>0x01</td><td>Enables or disables WDOG in Stop mode</td>
<tr><td>5</td><td>DBGEN</td><td>0x00</td><td>Enables or disables WDOG in Debug mode</td>
<tr><td>4</td><td>ALLOWUPDATE</td><td>0x01</td><td>Enables updates to watchdog write-once registers, after the reset-triggered initial configuration window (WCT) closes, through unlock sequence</td>
<tr><td>3</td><td>WINEN</td><td>0x00</td><td>Enables Windowing mode</td>
<tr><td>2</td><td>IRQRSTEN</td><td>0x00</td><td>Used to enable the debug breadcrumbs feature. A change in this bit is updated immediately, as opposed to updating after WCT</td>
<tr><td>1</td><td>CLKSRC</td><td>0x00</td><td>Selects clock source for the WDOG timer and other internal timing operations</td>
<tr><td>0</td><td>WDOGEN</td><td>0x01</td><td>Enables or disables the WDOG&apos;s operation. In the disabled state, the watchdog timer is kept in the reset state, but the other exception conditions can still trigger a reset/interrupt. A change in the value of this bit must be held for more than one WDOG_CLK cycle for the WDOG to be enabled or disabled</td>
</tr></table>
*/
/*!
\page WDOG_settings Component Settings
\code
**          Component name                                 : WDOG
**          Device                                         : WDOG
**          Settings                                       : 
**            Clock settings                               : 
**              Watchdog Configuration Time (WCT)          : 10.240 us
**              Clock select                               : 1-kHz low power oscillator
**              Prescaler                                  : divide by 8
**              Time-out value                             : 60000000
**              Time-out period                            : 480000 s
**            Window mode settings                         : 
**              Windowing mode                             : Disabled
**              Window value                               : 16
**              Window                                     : 128 ms
**            Test mode settings                           : 
**              Test mode                                  : Disabled
**              Test select                                : Quick test
**              Byte select                                : Byte 0 selected
**            Wait mode                                    : Enabled
**            Stop mode                                    : Enabled
**            Debug mode                                   : Disabled
**            Allow update                                 : Enabled
**          Interrupts                                     : 
**            Interrupt                                    : INT_WDOG_EWM
**            Interrupt request                            : <Automatic>
**            Interrupt priority                           : <Automatic>
**            ISR name                                     : 
**            Watchdog interrupt                           : Disabled
**          Initialization                                 : 
**            Test WDOG                                    : Disabled
**            Enable WDOG                                  : yes
**            Call Init method                             : yes
**            Utilize after reset values                   : default
<h1>
\endcode
*/
